{"version":3,"sources":["components/buttons/DotButtonsSimulation.js","redux/reducers/hideFoldersReducer.js","redux/types.js","redux/reducers/folderReducer.js","redux/reducers/saveFolderIdReducer.js","redux/reducers/pressAddFolderBtnReducer.js","redux/reducers/pressEditFolderNameBtnReducer.js","redux/reducers/noteReducer.js","redux/reducers/pressAddNoteNameBtnReducer.js","redux/reducers/pressEditNoteNameBtnReducer.js","redux/reducers/saveNoteIdReducer.js","redux/reducers/saveSelectedItemIdReducer.js","redux/reducers/dialogReducer.js","redux/store.js","redux/actions.js","components/buttons/HideFoldersBtn.js","helpers/allNotesIdInDeletedFolder.js","components/buttons/DeleteSelectedItemBtn.js","components/buttons/AddNoteBtn.js","components/buttons/AddFolderBtn.js","components/AppHeader.js","components/buttons/DeleteFolderBtn.js","components/buttons/EditFolderNameBtn.js","components/ItemTypesForReactDND.js","components/Folder.js","components/Folders.js","components/buttons/DeleteNoteBtn.js","components/buttons/EditNoteNameBtn.js","components/Note.js","helpers/findNoteBody.js","helpers/findNoteName.js","components/Dialog.js","components/Notes.js","App.js","index.js"],"names":["useStyles","makeStyles","dot","display","width","height","background","borderRadius","margin","DotsContainer","styled","Box","marginLeft","RedCircle","border","AmberCircle","GreenCircle","DotButtonsSimulation","classes","className","hideFoldersReducer","state","action","type","initialState","folderId","folderName","notesInThisFolder","folderReducer","folder","filter","map","index","note","noteId","noteBody","noteName","length","selectedItemIdFromAction","selectedItemId","includes","folderAllNotesId","arrayOfNotesIdThatWillBeDeleting","saveFolderIdForEditingReducer","pressAddFolderBtnReducer","value","pressEditFolderNameBtnReducer","noteReducer","pressAddNoteNameBtnReducer","pressEditNoteNameBtnReducer","saveNoteIdForEditingReducer","saveSelectedItemIdReducer","itemId","dialogReducer","getIsFoldersHidden","isFoldersHidden","getFolders","folders","getIsUserPressAddFolderBtn","isUserPressAddFolderBtn","getIsUserPressEditFolderNameBtn","isUserPressEditFolderNameBtn","getSelectedFolderIdForEditing","selectedFolderIdForEditing","getNotes","notes","getIsUserPressAddNoteNameBtn","isUserPressAddNoteNameBtn","getIsUserPressEditNoteNameBtn","isUserPressEditNoteNameBtn","getSelectedNoteIdForEditing","selectedNoteIdForEditing","getSelectedItemIdForDeleting","selectedItemIdForDeleting","getIsDialogOpened","isDialogOpened","rootReducer","combineReducers","saveFolderIdReducer","saveNoteIdReducer","store","createStore","composeWithDevTools","applyMiddleware","setTimeout","console","log","pressAddFolderBtn","pressEditFolderNameBtn","changeFolderName","saveFolderId","changeNotesInThisFolder","pressAddNoteNameBtn","pressEditNoteNameBtn","changeNoteName","saveNoteId","changeNoteBody","saveSelectedItemId","openDialog","changeNoteBodyInNotesInThisFolder","changeNoteNameInNotesInThisFolder","updateFolderAll","StyledButton","withStyles","root","paddingTop","paddingBottom","paddingLeft","paddingRight","minWidth","backgroundColor","label","padding","Button","button","marginTop","connect","dispatch","hideFolders","variant","color","startIcon","onClick","allNotesIdInDeletedFolder","selectedElementId","deletedFolder","find","ids","i","push","mobileButton","marginRight","deleteSelectedItem","arrayOfIds","mobile","position","bottom","boxShadow","textTransform","alignItems","AppHeaderWrapper","borderTopRightRadius","borderTopLeftRadius","borderBottom","AppHeader","AddFolderBtn","DeleteSelectedItemBtn","deleteFolder","IconButton","aria-label","fontSize","style","maxWidth","editFolderNameInput","folderNameInput","FolderStyled","isUserPressEditFolderNameButton","allowedDropEffect","useState","newFolderName","setNewFolderName","useDrop","accept","ItemTypesForReactDND","drop","name","collect","monitor","isOver","canDrop","isActive","selectBackgroundColor","maxLength","autoFocus","placeholder","defaultValue","onChange","e","target","onBlur","cn","selected","ref","input","paddingRigh","mobileInput","isUserPressAddFolderButton","addFolderFromProps","addFolder","currentFolder","setCurrentFolder","key","prevState","Date","deleteNote","deleteNoteInNotesInThisFolder","NoteWrapper","editNoteNameInput","noteLabel","styleForMobile","isUserPressEditNoteNameButton","folderIdOnDragEnd","deleteNoteInNotesInThisFolderOnDragEnd","newNoteName","setNewNoteName","item","useDrag","end","dropResult","getDropResult","dropEffect","droppedFolder","needFolder","some","opacity","isDragging","drag","onDoubleClick","DeleteNoteBtn","findNoteBody","findNoteName","newNoteBody","setNewNoteBody","Dialog","open","onClose","aria-labelledby","DialogContent","DialogContentText","noValidate","autoComplete","flexDirection","TextField","rows","multiline","id","marginBottom","NoteBodyWrapper","borderLeft","borderBottomRightRadius","borderBottomLeftRadius","firstNoteinput","StyledTextFieldWhenFoldersHidden","addNoteFromProps","addNote","currentNote","setCurrentNote","handleInputChange","handleTextFieldChange","isItAllNotesFolder","folderAllNotes","notesInThisFolderInFolderAll","Panels","theme","notesPanel","notesWhenFoldersHidden","breakpoints","between","borderRight","hidden","useTheme","useMediaQuery","up","ReactDOM","render","StrictMode","DndProvider","backend","Backend","document","getElementById"],"mappings":"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","file":"static/js/main.a4c5e5f5.chunk.js","sourcesContent":["import React from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport { styled, makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n  dot: {\n    display: \"inline-block\",\n    width: 10,\n    height: 10,\n    background: \"#f9f9f9\",\n    borderRadius: \"50%\",\n    margin: \"12px 8px 0 0\",\n  },\n}))\n\nconst DotsContainer = styled(Box)({\n  marginLeft: 10,\n})\n\nconst RedCircle = styled(Box)({\n  background: \"#FF6057\",\n  border: \"1px solid #E14640\",\n})\n\nconst AmberCircle = styled(Box)({\n  background: \"#FFBD2E\",\n  border: \"1px solid #DFA123\",\n})\n\nconst GreenCircle = styled(Box)({\n  background: \"#27C93F\",\n  border: \"1px solid #1DAD2B\",\n})\n\nconst DotButtonsSimulation = () => {\n  const classes = useStyles()\n\n  return (\n    <DotsContainer>\n      <RedCircle className={classes.dot} />\n      <AmberCircle className={classes.dot} />\n      <GreenCircle className={classes.dot} />\n    </DotsContainer>\n  )\n}\n\nexport default DotButtonsSimulation","import { HIDE_FOLDERS } from \"../types\"\n\nconst hideFoldersReducer = (state = false, action) => {\n  switch (action.type) {\n    case HIDE_FOLDERS:\n      return !state\n\n    default:\n      return state\n  }\n}\n\nexport default hideFoldersReducer\n","// folders types\nexport const HIDE_FOLDERS = \"HIDE_FOLDERS\"\nexport const ADD_FOLDER = \"ADD_FOLDER\"\nexport const DELETE_FOLDER = \"DELETE_FOLDER\"\nexport const PRESS_ADD_FOLDER_BTN = \"PRESS_ADD_FOLDER_BTN\"\nexport const PRESS_EDIT_FOLDER_NAME_BTN = \"PRESS_EDIT_FOLDER_NAME_BTN\"\nexport const CHANGE_FOLDER_NAME = \"CHANGE_FOLDER_NAME\"\nexport const SAVE_FOLDER_ID = \"SAVE_FOLDER_ID\"\n\n// notes types\nexport const ADD_NOTE = \"ADD_NOTE\"\nexport const DELETE_NOTE = \"DELETE_NOTE\"\nexport const PRESS_ADD_NOTE_NAME_BTN = \"PRESS_ADD_NOTE_NAME_BTN\"\nexport const PRESS_EDIT_NOTE_NAME_BTN = \"PRESS_EDIT_NOTE_NAME_BTN\"\nexport const CHANGE_NOTE_NAME = \"CHANGE_NOTE_NAME\"\nexport const CHANGE_NOTE_BODY = \"CHANGE_NOTE_BODY\"\nexport const SAVE_NOTE_ID = \"SAVE_NOTE_ID\"\n\n// common types\nexport const SAVE_SELECTED_ITEM_ID = \"SAVE_SELECTED_ITEM_ID\"\nexport const DELETE_SELECTED_ITEM = \"DELETE_SELECTED_ITEM\"\nexport const IS_DIALOG_OPENED = \"IS_DIALOG_OPENED\"\nexport const UPDATE_FOLDER_ALL = \"UPDATE_FOLDER_ALL\"\nexport const CHANGE_NOTE_BODY_IN_NOTES_IN_THIS_FOLDER =\n  \"CHANGE_NOTE_BODY_IN_NOTES_IN_THIS_FOLDER\"\nexport const CHANGE_NOTES_IN_THIS_FOLDER = \"CHANGE_NOTES_IN_THIS_FOLDER\"\nexport const CHANGE_NOTE_NAME_IN_NOTES_IN_THIS_FOLDER =\n  \"CHANGE_NOTE_NAME_IN_NOTES_IN_THIS_FOLDER\"\nexport const DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER =\n  \"DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER\"\nexport const DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER_ON_DRAG_END =\n  \"DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER_ON_DRAG_END\"\n","import {\n  ADD_FOLDER,\n  DELETE_FOLDER,\n  CHANGE_FOLDER_NAME,\n  CHANGE_NOTES_IN_THIS_FOLDER,\n  CHANGE_NOTE_BODY_IN_NOTES_IN_THIS_FOLDER,\n  CHANGE_NOTE_NAME_IN_NOTES_IN_THIS_FOLDER,\n  DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER,\n  DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER_ON_DRAG_END,\n  DELETE_SELECTED_ITEM,\n  UPDATE_FOLDER_ALL,\n} from \"../types\"\n\nconst initialState = [\n  {\n    folderId: \"folderAllNotes\",\n    folderName: \"All\",\n    notesInThisFolder: [],\n  },\n]\n\nconst folderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FOLDER:\n      return [\n        ...state,\n        {\n          folderId: action.folder.folderId,\n          folderName: action.folder.folderName,\n          notesInThisFolder: [],\n        },\n      ]\n\n    case DELETE_FOLDER:\n      return state.filter((folder) => folder.folderId !== action.folderId)\n\n    case CHANGE_FOLDER_NAME:\n      return state.map((folder) => {\n        if (\n          action.folderId !== folder.folderId ||\n          folder.folderName === action.folderName\n        ) {\n          return folder\n        }\n\n        return {\n          ...folder,\n          folderName: action.folderName\n        }\n      })\n\n    case CHANGE_NOTES_IN_THIS_FOLDER:\n      return state.map((folder, index) => {\n        if (\n          index === 0 &&\n          (action.folderId === \"folderAllNotes\") === folder.folderId\n        ) {\n          return {\n            ...folder,\n            notesInThisFolder: [...folder.notesInThisFolder, action.note],\n          }\n        }\n\n        if (folder.folderId === action.folderId) {\n          return {\n            ...folder,\n            notesInThisFolder: [...folder.notesInThisFolder, action.note]\n          }\n        } else {\n          return folder\n        }\n      })\n\n    case DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER_ON_DRAG_END:\n      return state.map((folder, index) => {\n        if (\n          index === 0 &&\n          action.folderId === \"folderAllNotes\" &&\n          action.folderId === folder.folderId\n        ) {\n          return folder\n        }\n\n        if (folder.folderId === action.folderId) {\n          return {\n            ...folder,\n            notesInThisFolder: folder.notesInThisFolder.filter(\n              (note) => note.noteId !== action.noteId\n            )\n          }\n        } else {\n          return folder\n        }\n      })\n\n    case CHANGE_NOTE_BODY_IN_NOTES_IN_THIS_FOLDER:\n      return state.map((folder) => {\n        return {\n          ...folder,\n          notesInThisFolder: folder.notesInThisFolder.map((note) => {\n            if (\n              action.noteId !== note.noteId ||\n              action.noteBody === note.noteBody\n            ) {\n              return note\n            }\n\n            return {\n              ...note,\n              noteBody: action.noteBody,\n            }\n          })\n        }\n      })\n\n    case CHANGE_NOTE_NAME_IN_NOTES_IN_THIS_FOLDER:\n      return state.map((folder) => {\n        return {\n          ...folder,\n          notesInThisFolder: folder.notesInThisFolder.map((note) => {\n            if (\n              action.noteId !== note.noteId ||\n              action.noteName === note.noteName\n            ) {\n              return note\n            }\n\n            return {\n              ...note,\n              noteName: action.noteName,\n            }\n          }),\n        }\n      })\n\n    case DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER:\n      return state.map((folder) => {\n        if (folder.notesInThisFolder.length === 0) {\n          return {\n            ...folder,\n            notesInThisFolder: [],\n          }\n        } else {\n          return {\n            ...folder,\n            notesInThisFolder: folder.notesInThisFolder.filter(\n              (note) => note.noteId !== action.noteId\n            )\n          }\n        }\n      })\n\n    case DELETE_SELECTED_ITEM:\n      const selectedItemIdFromAction = action.selectedItemId\n\n      if (selectedItemIdFromAction.includes(\"folder\")) {\n        return state.filter((folder, index) => {\n          if (\n            index === 0 &&\n            selectedItemIdFromAction === \"folderAllNotes\" &&\n            selectedItemIdFromAction === folder.folderId\n          ) {\n            return folder\n          } else {\n            return folder.folderId !== selectedItemIdFromAction\n          }\n        })\n      } else {\n        return state.map(folder => {\n          return {\n            ...folder,\n            notesInThisFolder: folder.notesInThisFolder.filter(\n              (note) => note.noteId !== selectedItemIdFromAction\n            )\n          }\n        })\n      }\n\n    case UPDATE_FOLDER_ALL:\n      return state.map((folder, index) => {\n        if (\n          index === 0 &&\n          action.folderAllNotesId === \"folderAllNotes\" &&\n          action.folderAllNotesId === folder.folderId\n        ) {\n          return {\n            ...folder,\n            notesInThisFolder: folder.notesInThisFolder.filter((note) => {\n              if (\n                action.arrayOfNotesIdThatWillBeDeleting.length > 0 &&\n                !action.arrayOfNotesIdThatWillBeDeleting.includes(note.noteId)\n              ) {\n                return note\n              }\n            })\n          }\n        } else {\n          return folder\n        }\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default folderReducer\n","import { SAVE_FOLDER_ID } from \"../types\"\n\nconst saveFolderIdForEditingReducer = (state = \"folderAllNotes\", action) => {\n  switch (action.type) {\n    case SAVE_FOLDER_ID:\n      return action.folderId\n\n    default:\n      return state\n  }\n}\n\nexport default saveFolderIdForEditingReducer","import { PRESS_ADD_FOLDER_BTN } from \"../types\"\n\nconst pressAddFolderBtnReducer = (state = false, action) => {\n  switch (action.type) {\n    case PRESS_ADD_FOLDER_BTN:\n      return action.value\n\n    default:\n      return state\n  }\n}\n\nexport default pressAddFolderBtnReducer","import { PRESS_EDIT_FOLDER_NAME_BTN } from \"../types\"\n\nconst pressEditFolderNameBtnReducer = (state = false, action) => {\n  switch (action.type) {\n    case PRESS_EDIT_FOLDER_NAME_BTN:\n      return action.value\n\n    default:\n      return state\n  }\n}\n\nexport default pressEditFolderNameBtnReducer","import {\n  ADD_NOTE,\n  DELETE_NOTE,\n  CHANGE_NOTE_NAME,\n  CHANGE_NOTE_BODY,\n} from \"../types\"\n\nconst noteReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_NOTE:\n      return [\n        ...state,\n        {\n          noteId: action.note.noteId,\n          noteName: action.note.noteName,\n          noteBody: action.note.noteBody,\n        },\n      ]\n\n    case DELETE_NOTE:\n      return state.filter((note) => note.noteId !== action.noteId)\n\n    case CHANGE_NOTE_NAME:\n      return state.map((note) => {\n        if (\n          action.noteId !== note.noteId ||\n          note.noteName === action.noteName\n        ) {\n          return note\n        }\n\n        return {\n          ...note,\n          noteName: action.noteName,\n        }\n      })\n\n    case CHANGE_NOTE_BODY:\n      return state.map((note) => {\n        if (\n          action.noteId !== note.noteId ||\n          note.noteBody === action.noteBody\n        ) {\n          return note\n        }\n\n        return {\n          ...note,\n          noteBody: action.noteBody,\n        }\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default noteReducer\n","import { PRESS_ADD_NOTE_NAME_BTN } from \"../types\"\n\nconst pressAddNoteNameBtnReducer = (state = false, action) => {\n  switch (action.type) {\n    case PRESS_ADD_NOTE_NAME_BTN:\n      return action.value\n\n    default:\n      return state\n  }\n}\n\nexport default pressAddNoteNameBtnReducer\n","import { PRESS_EDIT_NOTE_NAME_BTN } from \"../types\"\n\nconst pressEditNoteNameBtnReducer = (state = false, action) => {\n  switch (action.type) {\n    case PRESS_EDIT_NOTE_NAME_BTN:\n      return action.value\n\n    default:\n      return state\n  }\n};\n\nexport default pressEditNoteNameBtnReducer","import { SAVE_NOTE_ID } from \"../types\"\n\nconst saveNoteIdForEditingReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case SAVE_NOTE_ID:\n      return action.noteId\n\n    default:\n      return state\n  }\n}\n\nexport default saveNoteIdForEditingReducer","import { SAVE_SELECTED_ITEM_ID } from \"../types\"\n\nconst saveSelectedItemIdReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case SAVE_SELECTED_ITEM_ID:\n      return action.itemId\n\n    default:\n      return state\n  }\n}\n\nexport default saveSelectedItemIdReducer","import { IS_DIALOG_OPENED } from \"../types\"\n\nconst dialogReducer = (state = false, action) => {\n  switch (action.type) {\n    case IS_DIALOG_OPENED:\n      return action.value\n\n    default:\n      return state\n  }\n};\n\nexport default dialogReducer\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n//reducers\nimport hideFoldersReducer from \"./reducers/hideFoldersReducer\"\nimport folderReducer from \"./reducers/folderReducer\"\nimport saveFolderIdReducer from \"./reducers/saveFolderIdReducer\"\nimport pressAddFolderBtnReducer from \"./reducers/pressAddFolderBtnReducer\"\nimport pressEditFolderNameBtnReducer from \"./reducers/pressEditFolderNameBtnReducer\"\nimport noteReducer from \"./reducers/noteReducer\"\nimport pressAddNoteNameBtnReducer from \"./reducers/pressAddNoteNameBtnReducer\"\nimport pressEditNoteNameBtnReducer from \"./reducers/pressEditNoteNameBtnReducer\"\nimport saveNoteIdReducer from \"./reducers/saveNoteIdReducer\"\nimport saveSelectedItemIdReducer from \"./reducers/saveSelectedItemIdReducer\"\nimport dialogReducer from \"./reducers/dialogReducer\"\n\n// selectors\nexport const getIsFoldersHidden = (state) => state.isFoldersHidden\nexport const getFolders = (state) => state.folders\nexport const getIsUserPressAddFolderBtn = (state) =>\n  state.isUserPressAddFolderBtn\nexport const getIsUserPressEditFolderNameBtn = (state) =>\n  state.isUserPressEditFolderNameBtn\nexport const getSelectedFolderIdForEditing = (state) =>\n  state.selectedFolderIdForEditing\nexport const getNotes = (state) => state.notes\nexport const getIsUserPressAddNoteNameBtn = (state) =>\n  state.isUserPressAddNoteNameBtn\nexport const getIsUserPressEditNoteNameBtn = (state) =>\n  state.isUserPressEditNoteNameBtn\nexport const getSelectedNoteIdForEditing = (state) =>\n  state.selectedNoteIdForEditing\nexport const getSelectedItemIdForDeleting = (state) =>\n  state.selectedItemIdForDeleting\nexport const getIsDialogOpened = (state) => state.isDialogOpened\n\n//rootReducer\nconst rootReducer = combineReducers({\n  isFoldersHidden: hideFoldersReducer,\n  folders: folderReducer,\n  isUserPressAddFolderBtn: pressAddFolderBtnReducer,\n  isUserPressEditFolderNameBtn: pressEditFolderNameBtnReducer,\n  selectedFolderIdForEditing: saveFolderIdReducer,\n  notes: noteReducer,\n  isUserPressAddNoteNameBtn: pressAddNoteNameBtnReducer,\n  isUserPressEditNoteNameBtn: pressEditNoteNameBtnReducer,\n  selectedNoteIdForEditing: saveNoteIdReducer,\n  selectedItemIdForDeleting: saveSelectedItemIdReducer,\n  isDialogOpened: dialogReducer,\n})\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware()\n  ),\n)\n\nsetTimeout(() => {\n  console.log(\"smile :)\")\n}, 5000)\n\nexport default store\n","import {\n  HIDE_FOLDERS,\n  ADD_FOLDER,\n  DELETE_FOLDER,\n  PRESS_ADD_FOLDER_BTN,\n  PRESS_EDIT_FOLDER_NAME_BTN,\n  CHANGE_FOLDER_NAME,\n  SAVE_FOLDER_ID,\n  ADD_NOTE,\n  DELETE_NOTE,\n  PRESS_ADD_NOTE_NAME_BTN,\n  PRESS_EDIT_NOTE_NAME_BTN,\n  CHANGE_NOTE_NAME,\n  SAVE_NOTE_ID,\n  CHANGE_NOTE_BODY,\n  SAVE_SELECTED_ITEM_ID,\n  DELETE_SELECTED_ITEM,\n  IS_DIALOG_OPENED,\n  UPDATE_FOLDER_ALL,\n  CHANGE_NOTE_BODY_IN_NOTES_IN_THIS_FOLDER,\n  CHANGE_NOTES_IN_THIS_FOLDER,\n  CHANGE_NOTE_NAME_IN_NOTES_IN_THIS_FOLDER,\n  DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER,\n  DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER_ON_DRAG_END,\n} from \"./types\"\n\n// folders actions\nexport const hideFolders = () => ({ type: HIDE_FOLDERS })\nexport const addFolder = (folder) => ({ type: ADD_FOLDER, folder })\nexport const deleteFolder = (folderId) => ({ type: DELETE_FOLDER, folderId })\nexport const pressAddFolderBtn = (value) => ({\n  type: PRESS_ADD_FOLDER_BTN,\n  value,\n})\nexport const pressEditFolderNameBtn = (value) => ({\n  type: PRESS_EDIT_FOLDER_NAME_BTN,\n  value,\n})\nexport const changeFolderName = (folderName, folderId) => ({\n  type: CHANGE_FOLDER_NAME,\n  folderName,\n  folderId,\n})\nexport const saveFolderId = (folderId) => ({\n  type: SAVE_FOLDER_ID,\n  folderId,\n})\nexport const changeNotesInThisFolder = (folderId, note) => ({\n  type: CHANGE_NOTES_IN_THIS_FOLDER,\n  folderId,\n  note,\n})\n\n// notes actions\nexport const addNote = (note) => ({ type: ADD_NOTE, note })\nexport const pressAddNoteNameBtn = (value) => ({\n  type: PRESS_ADD_NOTE_NAME_BTN,\n  value,\n})\nexport const pressEditNoteNameBtn = (value) => ({\n  type: PRESS_EDIT_NOTE_NAME_BTN,\n  value,\n})\nexport const changeNoteName = (noteName, noteId) => ({\n  type: CHANGE_NOTE_NAME,\n  noteName,\n  noteId,\n})\nexport const saveNoteId = (noteId) => ({\n  type: SAVE_NOTE_ID,\n  noteId,\n})\nexport const deleteNote = (noteId) => ({ type: DELETE_NOTE, noteId })\nexport const changeNoteBody = (noteBody, noteId) => ({\n  type: CHANGE_NOTE_BODY,\n  noteBody,\n  noteId,\n})\n\n// common actions\nexport const saveSelectedItemId = (itemId) => ({\n  type: SAVE_SELECTED_ITEM_ID,\n  itemId,\n})\nexport const openDialog = (value) => ({\n  type: IS_DIALOG_OPENED,\n  value,\n})\nexport const changeNoteBodyInNotesInThisFolder = (noteBody, noteId) => ({\n  type: CHANGE_NOTE_BODY_IN_NOTES_IN_THIS_FOLDER,\n  noteBody,\n  noteId,\n})\nexport const changeNoteNameInNotesInThisFolder = (noteName, noteId) => ({\n  type: CHANGE_NOTE_NAME_IN_NOTES_IN_THIS_FOLDER,\n  noteName,\n  noteId,\n})\nexport const deleteNoteInNotesInThisFolder = (noteId) => ({\n  type: DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER,\n  noteId\n})\nexport const deleteNoteInNotesInThisFolderOnDragEnd = (folderId, noteId) => ({\n  type: DELETE_NOTE_IN_NOTES_IN_THIS_FOLDER_ON_DRAG_END,\n  folderId,\n  noteId\n})\nexport const deleteSelectedItem = (selectedItemId) => ({\n  type: DELETE_SELECTED_ITEM,\n  selectedItemId,\n})\nexport const updateFolderAll = (\n  arrayOfNotesIdThatWillBeDeleting,\n  folderAllNotesId\n) => ({\n  type: UPDATE_FOLDER_ALL,\n  arrayOfNotesIdThatWillBeDeleting,\n  folderAllNotesId,\n})\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport FolderIcon from \"@material-ui/icons/Folder\"\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\"\nimport { connect } from \"react-redux\"\nimport { getIsFoldersHidden } from \"../../redux/store\"\nimport { hideFolders } from \"../../redux/actions\"\n\nconst StyledButton = withStyles({\n  root: {\n    border: 0,\n    paddingTop: 2,\n    paddingBottom: 2,\n    paddingLeft: 12,\n    paddingRight: 0,\n    minWidth: 38,\n    backgroundColor: \"white\",\n  },\n  label: {\n    padding: 0,\n  },\n})(Button)\n\nconst useStyles = makeStyles({\n  button: {\n    marginTop: 6,\n    marginLeft: 150,\n  },\n})\n\nconst HideFoldersBtn = ({ isFoldersHidden, hideFolders }) => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <StyledButton\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        startIcon={isFoldersHidden ? <FolderIcon /> : <FolderOpenIcon />}\n        onClick={() => hideFolders()}\n      >\n        {\"\"}\n      </StyledButton>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => ({\n  isFoldersHidden: getIsFoldersHidden(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  hideFolders: () => dispatch(hideFolders()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HideFoldersBtn)\n","export default function allNotesIdInDeletedFolder(folders, selectedElementId) {\n  const deletedFolder = folders.find(\n    (folder) => folder.folderId === selectedElementId\n  )\n  if (!deletedFolder) return []\n  const ids = []\n\n  for (let i = 0; i < deletedFolder.notesInThisFolder.length; i++) {\n    const note = deletedFolder.notesInThisFolder[i]\n    ids.push(note.noteId)\n  }\n\n  return ids\n}","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { connect } from \"react-redux\"\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\"\nimport allNotesIdInDeletedFolder from \"../../helpers/allNotesIdInDeletedFolder\"\n\nimport {\n  getSelectedItemIdForDeleting,\n  getSelectedFolderIdForEditing,\n  getFolders,\n} from \"../../redux/store\"\nimport { deleteSelectedItem, updateFolderAll } from \"../../redux/actions\"\n\nconst StyledButton = withStyles({\n  root: {\n    border: 0,\n    paddingTop: 2,\n    paddingBottom: 2,\n    paddingLeft: 12,\n    paddingRight: 0,\n    minWidth: 38,\n    backgroundColor: \"white\",\n  },\n  label: {\n    padding: 0,\n  },\n})(Button)\n\nconst useStyles = makeStyles({\n  button: {\n    marginTop: 6,\n    marginLeft: 8,\n  },\n  mobileButton: {\n    marginTop: 6,\n    marginLeft: 30,\n    marginRight: 20,\n  },\n})\n\nconst DeleteSelectedItem = ({\n  deleteSelectedItem,\n  selectedItemIdForDeleting,\n  folders,\n  updateFolderAll,\n  mobile,\n}) => {\n  const classes = useStyles()\n\n  const checkNeedFolderUpdate = () => {\n    if (selectedItemIdForDeleting.includes(\"folder\")) {\n      updateFolderAll(\n        allNotesIdInDeletedFolder(folders, selectedItemIdForDeleting),\n        \"folderAllNotes\"\n      )\n    }\n  }\n\n  return (\n    <div>\n      <StyledButton\n        variant=\"contained\"\n        color=\"default\"\n        className={mobile ? classes.mobileButton : classes.button}\n        startIcon={<DeleteForeverIcon />}\n        onClick={() => {\n          checkNeedFolderUpdate()\n          deleteSelectedItem(selectedItemIdForDeleting)\n        }}\n      >\n        {\"\"}\n      </StyledButton>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => ({\n  selectedItemIdForDeleting: getSelectedItemIdForDeleting(state),\n  folders: getFolders(state),\n  selectedFolderIdForEditing: getSelectedFolderIdForEditing(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteSelectedItem: (selectedItemId) =>\n    dispatch(deleteSelectedItem(selectedItemId)),\n  updateFolderAll: (arrayOfIds, folderAllNotesId) =>\n    dispatch(updateFolderAll(arrayOfIds, folderAllNotesId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteSelectedItem)\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\"\nimport { connect } from \"react-redux\"\n\nimport { pressAddNoteNameBtn } from \"../../redux/actions\"\n\nconst StyledButton = withStyles({\n  root: {\n    border: 0,\n    paddingTop: 2,\n    paddingBottom: 2,\n    paddingLeft: 12,\n    paddingRight: 0,\n    minWidth: 38,\n    backgroundColor: \"white\",\n  },\n  label: {\n    padding: 0,\n  },\n})(Button)\n\nconst useStyles = makeStyles(() => ({\n  button: {\n    marginTop: 6,\n    marginLeft: 8,\n  },\n}))\n\nconst AddNote = ({ pressAddNoteNameBtn }) => {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <StyledButton\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        startIcon={<NoteAddIcon />}\n        onClick={() => {\n          pressAddNoteNameBtn(true)\n        }}\n      >\n        {\"\"}\n      </StyledButton>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  pressAddNoteNameBtn: (value) => dispatch(pressAddNoteNameBtn(value)),\n})\n\nexport default connect(null, mapDispatchToProps)(AddNote)\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\"\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport { connect } from \"react-redux\"\n\nimport { pressAddFolderBtn } from \"../../redux/actions\"\n\nconst StyledButton = withStyles({\n  root: {\n    position: \"absolute\",\n    bottom: 15,\n    backgroundColor: \"rgb(228, 226, 229)\",\n    boxShadow: \"none\",\n    border: \"none\",\n    textTransform: \"none\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      backgroundColor: \"rgb(228, 226, 229)\",\n      border: \"none\",\n      boxShadow: \"none\",\n    },\n  },\n  label: {\n    padding: 0,\n    alignItems: \"none\",\n  },\n})(Button)\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"static\",\n    marginLeft: 10,\n  },\n})\n\nconst AddFolderButton = ({ pressAddFolderBtn, mobile }) => {\n  const classes = useStyles()\n\n  if (mobile) {\n    return (\n      <StyledButton\n        variant=\"contained\"\n        color=\"default\"\n        startIcon={<AddCircleIcon />}\n        onClick={() => pressAddFolderBtn(true)}\n        className={classes.root}\n      >\n        New&nbsp;Folder\n      </StyledButton>\n    )\n  } else {\n    return (\n      <StyledButton\n        variant=\"contained\"\n        color=\"default\"\n        startIcon={<AddCircleIcon />}\n        onClick={() => pressAddFolderBtn(true)}\n      >\n        New&nbsp;Folder\n      </StyledButton>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  pressAddFolderBtn: (value) => dispatch(pressAddFolderBtn(value)),\n})\n\nexport default connect(null, mapDispatchToProps)(AddFolderButton)\n","import React from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport { styled } from \"@material-ui/core/styles\"\nimport DotButtonsSimulation from \"./buttons/DotButtonsSimulation\"\nimport HideFoldersBtn from \"./buttons/HideFoldersBtn\"\nimport DeleteSelectedItemBtn from \"./buttons/DeleteSelectedItemBtn\"\nimport AddNote from \"./buttons/AddNoteBtn\"\nimport AddFolderBtn from \"./buttons/AddFolderBtn\"\n\nconst AppHeaderWrapper = styled(Box)({\n  display: \"flex\",\n  backgroundColor: \"rgb(228, 226, 229)\",\n  height: 38,\n  borderTopRightRadius: 10,\n  borderTopLeftRadius: 10,\n  borderBottom: \"1px solid rgb(190, 190, 190)\"\n})\n\nconst AppHeader = ({ mobile }) => (\n  <AppHeaderWrapper>\n    {!mobile && <DotButtonsSimulation />}\n    {mobile && <AddFolderBtn mobile={mobile} />}\n    {!mobile && <HideFoldersBtn />}\n    <DeleteSelectedItemBtn mobile={mobile} />\n    <AddNote />\n  </AppHeaderWrapper>\n)\n\nexport default AppHeader\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { connect } from \"react-redux\"\nimport allNotesIdInDeletedFolder from \"../../helpers/allNotesIdInDeletedFolder\"\nimport {\n  getSelectedItemIdForDeleting,\n  getSelectedFolderIdForEditing,\n  getFolders,\n} from \"../../redux/store\"\nimport {\n  updateFolderAll,\n  saveFolderId,\n  deleteFolder,\n} from \"../../redux/actions\"\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& > *\": {\n      margin: -6,\n    },\n  },\n}))\n\nconst DeleteFolderButton = ({\n  deleteFolder,\n  folderId,\n  folders,\n  updateFolderAll,\n  saveFolderId,\n  selectedFolderIdForEditing,\n}) => {\n  const classes = useStyles()\n\n  const checkNeedFolderUpdate = () => {\n    if (\n      allNotesIdInDeletedFolder(folders, selectedFolderIdForEditing).length > 0\n    ) {\n      updateFolderAll(\n        allNotesIdInDeletedFolder(folders, selectedFolderIdForEditing),\n        \"folderAllNotes\"\n      )\n    }\n  }\n\n  return (\n    <div\n      className={classes.root}\n      onClick={() => {\n        saveFolderId(folderId)\n        checkNeedFolderUpdate()\n        deleteFolder(folderId)\n      }}\n    >\n      <IconButton aria-label=\"delete\">\n        <DeleteIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  selectedItemIdForDeleting: getSelectedItemIdForDeleting(state),\n  folders: getFolders(state),\n  selectedFolderIdForEditing: getSelectedFolderIdForEditing(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateFolderAll: (arrayOfIds, folderAllNotesId) =>\n    dispatch(updateFolderAll(arrayOfIds, folderAllNotesId)),\n  deleteFolder: (folderId) => dispatch(deleteFolder(folderId)),\n  saveFolderId: (folderId) => dispatch(saveFolderId(folderId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteFolderButton)\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport { connect } from \"react-redux\"\n\nimport { pressEditFolderNameBtn, saveFolderId } from \"../../redux/actions\"\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& > *\": {\n      margin: -6,\n\n      [\"@media (max-width:599px)\"]: {// eslint-disable-line no-useless-computed-key\n        marginLeft: 20,\n      },\n    },\n  },\n}))\n\nconst EditFolderNameBtn = ({\n  pressEditFolderNameBtn,\n  folderId,\n  saveFolderId,\n}) => {\n  const classes = useStyles()\n\n  return (\n    <div\n      className={classes.root}\n      onClick={() => {\n        pressEditFolderNameBtn(true)\n        saveFolderId(folderId)\n      }}\n    >\n      <IconButton aria-label=\"delete\">\n        <EditIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  pressEditFolderNameBtn: (value) => dispatch(pressEditFolderNameBtn(value)),\n  saveFolderId: (folderId) => dispatch(saveFolderId(folderId)),\n})\n\nexport default connect(null, mapDispatchToProps)(EditFolderNameBtn)\n","export default { BOX: \"box\" }\n","import React, { useState } from \"react\"\nimport cn from \"classnames\"\nimport { useDrop } from \"react-dnd\"\nimport { connect } from \"react-redux\"\nimport Box from \"@material-ui/core/Box\"\nimport { styled, makeStyles } from \"@material-ui/core/styles\"\nimport DeleteFolderButton from \"./buttons/DeleteFolderBtn\"\nimport EditFolderNameButton from \"./buttons/EditFolderNameBtn\"\nimport ItemTypesForReactDND from \"./ItemTypesForReactDND\"\n\nimport {\n  getSelectedFolderIdForEditing,\n  getIsUserPressEditFolderNameBtn,\n} from \"../redux/store\"\nimport {\n  changeFolderName,\n  saveFolderId,\n  pressEditFolderNameBtn,\n  saveSelectedItemId,\n} from \"../redux/actions\"\n\nconst style = {\n  color: \"white\",\n}\n\nconst useStyles = makeStyles({\n  label: {\n    display: \"block\",\n    minWidth: 140,\n    fontSize: 14,\n    padding: 5,\n    paddingRight: 0,\n\n    [\"@media (max-width:1040px)\"]: {// eslint-disable-line no-useless-computed-key\n      minWidth: \"60%\",\n    },\n    [\"@media (max-width:600px)\"]: {// eslint-disable-line no-useless-computed-key\n      maxWidth: \"60%\",\n    },\n    [\"@media (max-width:599px)\"]: {// eslint-disable-line no-useless-computed-key\n      fontSize: 16,\n      padding: \"10px 0 10px 20px\",\n      minWidth: \"75%\",\n    },\n    [\"@media (max-width:500px)\"]: {// eslint-disable-line no-useless-computed-key\n      minWidth: \"70%\",\n    },\n    [\"@media (max-width:405px)\"]: {// eslint-disable-line no-useless-computed-key\n      minWidth: \"65%\",\n    },\n    [\"@media (max-width:350px)\"]: {// eslint-disable-line no-useless-computed-key\n      minWidth: \"55%\",\n    }\n  },\n  editFolderNameInput: {\n    fontSize: 14,\n    margin: \"5px 0\",\n    padding: 5,\n\n    [\"@media (max-width:599px)\"]: {// eslint-disable-line no-useless-computed-key\n      fontSize: 16,\n      width: \"94%\",\n      paddingLeft: 20,\n    },\n    [\"@media (max-width:500px)\"]: {// eslint-disable-line no-useless-computed-key\n      width: \"90%\",\n    }\n  },\n  folderNameInput: {\n    width: 200,\n    fontSize: 14,\n    marginTop: 10,\n    padding: 5,\n  },\n})\n\nconst FolderStyled = styled(Box)({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n})\n\nfunction selectBackgroundColor(isActive, canDrop, folderId) {\n  if (folderId === \"folderAllNotes\") return \"\"\n  if (isActive) return \"darkgreen\"\n  if (canDrop) return \"darkkhaki\"\n\n  return \"\"\n}\n\nconst Folder = ({\n  allowedDropEffect,\n  folder,\n  changeFolderName,\n  saveFolderId,\n  selectedFolderIdForEditing,\n  isUserPressEditFolderNameButton,\n  pressEditFolderNameBtn,\n  saveSelectedItemId,\n}) => {\n  const classes = useStyles()\n  const { folderName, folderId } = folder\n  const [newFolderName, setNewFolderName] = useState(\"\")\n\n  const handleInputChange = (value) => {\n    setNewFolderName(value)\n  };\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: ItemTypesForReactDND.BOX,\n    drop: () => ({\n      name: folderId,\n      allowedDropEffect,\n    }),\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    })\n  })\n  const isActive = canDrop && isOver\n  const backgroundColor = selectBackgroundColor(isActive, canDrop, folderId)\n\n  if (\n    selectedFolderIdForEditing === folderId &&\n    isUserPressEditFolderNameButton\n  ) {\n    return (\n      <div>\n        <input\n          maxLength=\"20\"\n          autoFocus\n          placeholder=\"New Folder\"\n          defaultValue={folderName}\n          onChange={(e) => {\n            handleInputChange(e.target.value)\n            changeFolderName(newFolderName, folderId)\n          }}\n          onBlur={() => {\n            pressEditFolderNameBtn(false)\n          }}\n          type=\"text\"\n          className={classes.editFolderNameInput}\n        />\n      </div>\n    )\n  }\n\n  if (folderId === \"folderAllNotes\") {\n    return (\n      <div style={{ ...style, backgroundColor }}>\n        <li \n          style={{ height: \"32px\", display: \"flex\" }}\n          onClick={() => {\n            saveFolderId(folderId);\n            saveSelectedItemId(folderId);\n          }}\n          className={cn(\"folder-li\", {\n            selected: selectedFolderIdForEditing === folderId\n          })}\n        >\n          <FolderStyled>\n            <label className={classes.label}>{folderName}</label>\n          </FolderStyled>\n        </li>\n      </div>\n    )\n  }\n\n  return (\n    <div ref={drop} style={{ ...style, backgroundColor }}>\n      <li\n        onClick={() => {\n          saveFolderId(folderId);\n          saveSelectedItemId(folderId);\n        }}\n        className={cn(\"folder-li\", {\n          selected: selectedFolderIdForEditing === folderId\n        })}\n      >\n        <FolderStyled>\n          <label className={classes.label}>{folderName}</label>\n          <DeleteFolderButton folderId={folderId} />\n          <EditFolderNameButton folderId={folderId} />\n        </FolderStyled>\n      </li>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isUserPressEditFolderNameButton: getIsUserPressEditFolderNameBtn(state),\n  selectedFolderIdForEditing: getSelectedFolderIdForEditing(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  pressEditFolderNameBtn: (value) => dispatch(pressEditFolderNameBtn(value)),\n  changeFolderName: (folderName, folderId) =>\n    dispatch(changeFolderName(folderName, folderId)),\n  saveFolderId: (folderId) => dispatch(saveFolderId(folderId)),\n  saveSelectedItemId: (folderId) => dispatch(saveSelectedItemId(folderId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Folder)\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Folder from \"./Folder\"\nimport { getFolders, getIsUserPressAddFolderBtn } from \"../redux/store\"\nimport {\n  addFolder,\n  pressAddFolderBtn,\n  changeFolderName,\n  saveFolderId,\n} from \"../redux/actions\"\n\nconst useStyles = makeStyles({\n  input: {\n    width: \"92%\",\n    display: \"block\",\n    fontSize: 14,\n    padding: 5,\n    paddingRigh: 0,\n\n    ['@media (max-width:1040px)']: { // eslint-disable-line no-useless-computed-key\n      width: '90%',\n    },\n  },\n  mobileInput: {\n    width: \"94%\",\n    display: \"block\",\n    fontSize: 16,\n    padding: 5,\n    paddingLeft: 20,\n\n    ['@media (max-width:500px)']: { // eslint-disable-line no-useless-computed-key\n      width: '90%',\n    },\n  },\n})\n\nconst Folders = ({\n  folders,\n  isUserPressAddFolderButton,\n  pressAddFolderBtn,\n  addFolderFromProps,\n  saveFolderId,\n  mobile,\n}) => {\n  const classes = useStyles()\n  const [currentFolder, setCurrentFolder] = useState({\n    folderId: null,\n    folderName: null,\n    notesInThisFolder: [],\n  })\n\n  const handleInputChange = (value) => {\n    setCurrentFolder((prevState) => {\n      return {\n        ...prevState,\n        folderId: `folderID-${+new Date()}`,\n        folderName: value,\n      }\n    })\n  }\n\n  return (\n    <>\n      <div>\n        {folders.length > 0 && (\n          <ul style={{marginTop: '0'}}>\n            {folders.map(folder => (\n              <Folder\n                allowedDropEffect=\"move\"\n                folder={folder}\n                key={folder.folderId}\n                mobile={mobile}\n              />\n            ))}\n\n            {isUserPressAddFolderButton && (\n              <div>\n                <input\n                  maxLength=\"20\"\n                  autoFocus\n                  placeholder=\"New Folder\"\n                  onChange={(e) => handleInputChange(e.target.value)}\n                  onBlur={() => {\n                    pressAddFolderBtn(false)\n                    if(currentFolder.folderName === null) return\n                    addFolderFromProps(currentFolder)\n                    saveFolderId(currentFolder.folderId)\n                  }}\n                  type=\"text\"\n                  className={ mobile ? classes.mobileInput : classes.input}\n                />\n              </div>\n            )}\n          </ul>\n        )}\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  folders: getFolders(state),\n  isUserPressAddFolderButton: getIsUserPressAddFolderBtn(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addFolderFromProps: (folder) => dispatch(addFolder(folder)),\n  pressAddFolderBtn: (value) => dispatch(pressAddFolderBtn(value)),\n  changeFolderName: (folderName, folderId) =>\n    dispatch(changeFolderName(folderName, folderId)),\n  saveFolderId: (folderId) => dispatch(saveFolderId(folderId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Folders)\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { connect } from \"react-redux\"\nimport { deleteNote, deleteNoteInNotesInThisFolder } from \"../../redux/actions\"\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& > *\": {\n      margin: -6,\n    },\n  },\n}))\n\nconst DeleteNoteButton = ({\n  deleteNote,\n  noteId,\n  deleteNoteInNotesInThisFolder,\n}) => {\n  const classes = useStyles()\n\n  return (\n    <div\n      className={classes.root}\n      onClick={() => {\n        deleteNote(noteId)\n        deleteNoteInNotesInThisFolder(noteId)\n      }}\n    >\n      <IconButton aria-label=\"delete\">\n        <DeleteIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteNote: (noteId) => dispatch(deleteNote(noteId)),\n  deleteNoteInNotesInThisFolder: (noteId) =>\n    dispatch(deleteNoteInNotesInThisFolder(noteId)),\n})\n\nexport default connect(null, mapDispatchToProps)(DeleteNoteButton)\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport { connect } from \"react-redux\"\n\nimport { pressEditNoteNameBtn, saveNoteId } from \"../../redux/actions\"\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& > *\": {\n      margin: -6,\n\n      [\"@media (max-width:599px)\"]: {// eslint-disable-line no-useless-computed-key\n        marginLeft: 20,\n      },\n    },\n  },\n}))\n\nconst EditNoteNameBtn = ({ noteId, pressEditNoteNameBtn, saveNoteId }) => {\n  const classes = useStyles()\n\n  return (\n    <div\n      className={classes.root}\n      onClick={() => {\n        pressEditNoteNameBtn(true);\n        saveNoteId(noteId);\n      }}\n    >\n      <IconButton aria-label=\"delete\">\n        <EditIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  pressEditNoteNameBtn: (value) => dispatch(pressEditNoteNameBtn(value)),\n  saveNoteId: (noteId) => dispatch(saveNoteId(noteId)),\n})\n\nexport default connect(null, mapDispatchToProps)(EditNoteNameBtn)\n","import React, { useState } from \"react\"\nimport cn from \"classnames\"\nimport { useDrag } from \"react-dnd\"\nimport { connect } from \"react-redux\"\nimport Box from \"@material-ui/core/Box\"\nimport { styled, makeStyles } from \"@material-ui/core/styles\"\nimport DeleteNoteBtn from \"./buttons/DeleteNoteBtn\"\nimport EditNoteNameBtn from \"./buttons/EditNoteNameBtn\"\nimport ItemTypesForReactDND from \"./ItemTypesForReactDND\"\n\nimport {\n  getSelectedNoteIdForEditing,\n  getIsUserPressEditNoteNameBtn,\n  getFolders,\n} from \"../redux/store\"\nimport {\n  changeNoteName,\n  saveNoteId,\n  pressEditNoteNameBtn,\n  openDialog,\n  changeNotesInThisFolder,\n  changeNoteNameInNotesInThisFolder,\n  deleteNoteInNotesInThisFolderOnDragEnd,\n  saveSelectedItemId,\n} from \"../redux/actions\"\n\nconst NoteWrapper = styled(Box)({\n  display: \"flex\",\n  width: 300,\n  alignItems: \"flex-end\",\n})\n\nconst useStyles = makeStyles(() => ({\n  editNoteNameInput: {\n    minWidth: 294,\n    fontSize: 14,\n    margin: \"5px 0\",\n    height: 22,\n\n    [\"@media (max-width:599px)\"]: {// eslint-disable-line no-useless-computed-key\n      fontSize: 16,\n      width: \"78vw\",\n      padding: 5,\n      paddingLeft: 20,\n    },\n    [\"@media (max-width:500px)\"]: {// eslint-disable-line no-useless-computed-key\n      width: \"90%\",\n    },\n  },\n  noteLabel: {\n    display: \"block\",\n    minWidth: 220,\n    fontSize: 14,\n    padding: 5,\n    paddingRight: 0,\n\n    [\"@media (max-width:599px)\"]: {// eslint-disable-line no-useless-computed-key\n      fontSize: 16,\n      padding: \"10px 0 10px 20px\",\n      minWidth: \"73vw\",\n    },\n    [\"@media (max-width:500px)\"]: {// eslint-disable-line no-useless-computed-key\n      minWidth: \"69vw\",\n    },\n    [\"@media (max-width:440px)\"]: {// eslint-disable-line no-useless-computed-key\n      minWidth: \"62vw\",\n    },\n    [\"@media (max-width:360px)\"]: {// eslint-disable-line no-useless-computed-key\n      minWidth: \"58vw\",\n      paddingLeft: 10,\n    },\n  },\n}))\n\nconst style = {\n  backgroundColor: \"white\",\n  width: \"fit-content\",\n}\n\nconst styleForMobile = {\n  backgroundColor: \"white\",\n  width: \"100%\",\n}\n\nconst Note = ({\n  note,\n  changeNoteName,\n  isUserPressEditNoteNameButton,\n  saveNoteId,\n  selectedNoteIdForEditing,\n  pressEditNoteNameBtn,\n  openDialog,\n  changeNotesInThisFolder,\n  changeNoteNameInNotesInThisFolder,\n  deleteNoteInNotesInThisFolderOnDragEnd,\n  folders,\n  saveSelectedItemId,\n  mobile,\n}) => {\n  const classes = useStyles()\n  const { noteName, noteId } = note\n  const [newNoteName, setNewNoteName] = useState(\"\")\n\n  const handleInputChange = (value) => {\n    setNewNoteName(value)\n  }\n\n  const item = { ...note, type: ItemTypesForReactDND.BOX }\n  const [{ opacity }, drag] = useDrag({\n    item,\n    end(item, monitor) {\n      const dropResult = monitor.getDropResult()\n      if (item && dropResult) {\n        const isDropAllowed =\n          dropResult.allowedDropEffect === \"any\" ||\n          dropResult.allowedDropEffect === dropResult.dropEffect\n        if (isDropAllowed) {\n          // alert(\n          //   `You ${dropResult.dropEffect} noteName - ${noteName} - ${noteId}into ${dropResult.name}!`\n          // );\n          const folderIdOnDragEnd = monitor.getDropResult().name;\n          const droppedFolder = folders.find((folder, i) => {\n            let needFolder = null\n            if (i > 0) {\n              needFolder = folder.notesInThisFolder.some(\n                (note) => note.noteId === noteId\n              )\n            }\n            return needFolder\n          })\n\n          if (droppedFolder && droppedFolder.folderId) {\n            deleteNoteInNotesInThisFolderOnDragEnd(\n              droppedFolder.folderId,\n              noteId\n            )\n          }\n          changeNotesInThisFolder(folderIdOnDragEnd, note)\n        }\n      }\n    },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  })\n\n  if (selectedNoteIdForEditing === noteId && isUserPressEditNoteNameButton) {\n    return (\n      <div>\n        <input\n          autoFocus\n          maxLength=\"20\"\n          type=\"text\"\n          placeholder=\"New Note\"\n          defaultValue={noteName}\n          className={classes.editNoteNameInput}\n          onChange={(e) => handleInputChange(e.target.value)}\n          onBlur={() => {\n            pressEditNoteNameBtn(false)\n            if (newNoteName === \"\") return\n            changeNoteNameInNotesInThisFolder(newNoteName, noteId)\n            changeNoteName(newNoteName, noteId)\n          }}\n        />\n      </div>\n    )\n  } else {\n    return (\n      <div\n        ref={drag}\n        style={mobile ? { ...styleForMobile, opacity } : { ...style, opacity }}\n      >\n        <li\n          onDoubleClick={() => openDialog(true)}\n          onClick={() => {\n            saveNoteId(noteId);\n            saveSelectedItemId(noteId);\n          }}\n          className={cn(\"note-li \", {\n            selected: selectedNoteIdForEditing === noteId,\n          })}\n        >\n          <NoteWrapper>\n            <label className={classes.noteLabel}>{noteName}</label>\n            <DeleteNoteBtn noteId={noteId} />\n            <EditNoteNameBtn noteId={noteId} />\n          </NoteWrapper>\n        </li>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isUserPressEditNoteNameButton: getIsUserPressEditNoteNameBtn(state),\n  selectedNoteIdForEditing: getSelectedNoteIdForEditing(state),\n  folders: getFolders(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  pressEditNoteNameBtn: (value) => dispatch(pressEditNoteNameBtn(value)),\n  changeNoteName: (noteName, noteId) =>\n    dispatch(changeNoteName(noteName, noteId)),\n  saveNoteId: (noteId) => dispatch(saveNoteId(noteId)),\n  openDialog: (value) => dispatch(openDialog(value)),\n  changeNotesInThisFolder: (folderIdOnDragEnd, note) =>\n    dispatch(changeNotesInThisFolder(folderIdOnDragEnd, note)),\n  changeNoteNameInNotesInThisFolder: (noteName, noteId) =>\n    dispatch(changeNoteNameInNotesInThisFolder(noteName, noteId)),\n  deleteNoteInNotesInThisFolderOnDragEnd: (folderId, noteId) =>\n    dispatch(deleteNoteInNotesInThisFolderOnDragEnd(folderId, noteId)),\n  saveSelectedItemId: (itemId) => dispatch(saveSelectedItemId(itemId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Note)\n","export default function findNoteBody(notes, selectedNoteIdForEditing) {\n  const noteBody = notes.find((note) => note.noteId === selectedNoteIdForEditing).noteBody\n  if (noteBody === null) return \"\"\n\n  return noteBody\n}\n","export default function findNoteName(notes, selectedNoteIdForEditing) {\n  const noteName = notes.find((note) => note.noteId === selectedNoteIdForEditing).noteName\n  if (noteName === null) return \"\"\n\n  return noteName\n}","import React, { useState } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport { connect } from \"react-redux\"\nimport findNoteBody from \"../helpers/findNoteBody\"\nimport findNoteName from \"../helpers/findNoteName\"\n\nimport {\n  getIsDialogOpened,\n  getSelectedNoteIdForEditing,\n  getNotes,\n} from \"../redux/store\"\nimport {\n  openDialog,\n  changeNoteBody,\n  changeNoteName,\n  changeNoteBodyInNotesInThisFolder,\n  changeNoteNameInNotesInThisFolder,\n} from \"../redux/actions\"\n\nconst DialogForEditingNoteBody = ({\n  notes,\n  changeNoteBody,\n  changeNoteName,\n  isDialogOpened,\n  openDialog,\n  selectedNoteIdForEditing,\n  changeNoteBodyInNotesInThisFolder,\n  changeNoteNameInNotesInThisFolder,\n}) => {\n  const [newNoteBody, setNewNoteBody] = useState(\"\")\n  const [newNoteName, setNewNoteName] = useState(\"\")\n\n  const handleNoteBodyChanging = (value) => {\n    setNewNoteBody(value)\n    changeNoteBody(value, selectedNoteIdForEditing)\n  }\n\n  const handleNoteNameChanging = (value) => {\n    setNewNoteName(value)\n    changeNoteName(value, selectedNoteIdForEditing)\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={isDialogOpened}\n        onClose={() => openDialog(false)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogContent>\n          <DialogContentText>Please change your note</DialogContentText>\n          <form\n            noValidate\n            autoComplete=\"off\"\n            style={{ display: \"flex\", flexDirection: \"column\" }}\n            onBlur={() => {\n              openDialog(false)\n              if (newNoteName === \"\") return\n\n              changeNoteNameInNotesInThisFolder(\n                newNoteName,\n                selectedNoteIdForEditing\n              )\n\n              changeNoteBodyInNotesInThisFolder(\n                newNoteBody,\n                selectedNoteIdForEditing\n              )\n            }}\n          >\n            <TextField\n              rows=\"2\"\n              multiline\n              label=\"Note name\"\n              variant=\"outlined\"\n              id=\"outlined-multiline-static\"\n              value={findNoteName(notes, selectedNoteIdForEditing)}\n              onChange={(e) => handleNoteNameChanging(e.target.value)}\n              style={{ marginBottom: \"20px\" }}\n            />\n            <TextField\n              rows=\"6\"\n              multiline\n              label=\"Note\"\n              variant=\"outlined\"\n              id=\"outlined-multiline-static\"\n              value={findNoteBody(notes, selectedNoteIdForEditing)}\n              onChange={(e) => handleNoteBodyChanging(e.target.value)}\n            />\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isDialogOpened: getIsDialogOpened(state),\n  selectedNoteIdForEditing: getSelectedNoteIdForEditing(state),\n  notes: getNotes(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  openDialog: (value) => dispatch(openDialog(value)),\n  changeNoteBody: (noteBody, noteId) =>\n    dispatch(changeNoteBody(noteBody, noteId)),\n  changeNoteName: (noteName, noteId) =>\n    dispatch(changeNoteName(noteName, noteId)),\n  changeNoteBodyInNotesInThisFolder: (noteBody, noteId) =>\n    dispatch(changeNoteBodyInNotesInThisFolder(noteBody, noteId)),\n  changeNoteNameInNotesInThisFolder: (noteName, noteId) =>\n    dispatch(changeNoteNameInNotesInThisFolder(noteName, noteId)),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DialogForEditingNoteBody)\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport Box from \"@material-ui/core/Box\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { makeStyles, withStyles, styled } from \"@material-ui/core/styles\"\nimport Note from \"./Note\"\nimport findNoteBody from \"../helpers/findNoteBody\"\nimport ItemTypesForReactDND from \"./ItemTypesForReactDND\"\nimport Dialog from \"./Dialog\"\n\nimport {\n  getNotes,\n  getFolders,\n  getIsUserPressAddNoteNameBtn,\n  getIsDialogOpened,\n  getSelectedNoteIdForEditing,\n  getIsFoldersHidden,\n  getSelectedFolderIdForEditing,\n} from \"../redux/store\"\nimport {\n  addNote,\n  pressAddNoteNameBtn,\n  saveNoteId,\n  changeNoteBody,\n  changeNotesInThisFolder,\n  changeNoteBodyInNotesInThisFolder,\n} from \"../redux/actions\"\n\nconst NoteBodyWrapper = styled(Box)({\n  borderLeft: \"1px solid rgb(153, 152, 152)\",\n})\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: 0,\n      [\"@media (max-width:599px)\"]: { // eslint-disable-line no-useless-computed-key\n        marginTop: 20,\n      },\n    },\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 0,\n      paddingTop: 0,\n      width: 428,\n      height: 523,\n      borderBottomRightRadius: 10,\n\n      [\"media (max-width:1040px)\"]: { // eslint-disable-line no-useless-computed-key\n        width: 240,\n      },\n      [\"@media (max-width:820px)\"]: { // eslint-disable-line no-useless-computed-key\n        width: 300,\n        height: 120,\n      },\n      [\"@media (max-width:600px)\"]: { // eslint-disable-line no-useless-computed-key\n        width: \"54vw\",\n        height: 222,\n      },\n      [\"@media (max-width:599px)\"]: { // eslint-disable-line no-useless-computed-key\n        width: \"99vw\",\n        borderBottomLeftRadius: 10,\n      },\n    },\n    \"& .MuiInputBase-inputMultiline\": {\n      height: 446,\n\n      [\"@media (max-width:820px)\"]: { // eslint-disable-line no-useless-computed-key\n        paddingTop: 10,\n        height: 80,\n      },\n      [\"@media (max-width:600px)\"]: { // eslint-disable-line no-useless-computed-key\n        paddingTop: 20,\n        height: 176,\n      },\n    }\n  },\n  firstNoteinput: {\n    marginTop: 20,\n    width: 240,\n    height: 26,\n    fontSize: 14,\n\n    [\"@media (max-width:599px)\"]: { // eslint-disable-line no-useless-computed-key\n      width: \"94%\",\n      display: \"block\",\n      fontSize: 16,\n      padding: 5,\n      paddingLeft: 20,\n    },\n    [\"@media (max-width:460px)\"]: { // eslint-disable-line no-useless-computed-key\n      width: \"88vw\",\n    },\n    [\"@media (max-width:360px)\"]: { // eslint-disable-line no-useless-computed-key\n      width: \"86vw\",\n    },\n  },\n  input: {\n    width: \"96%\",\n    display: \"block\",\n    fontSize: 14,\n    height: 26,\n\n    [\"@media (max-width:599px)\"]: { // eslint-disable-line no-useless-computed-key\n      width: \"94%\",\n      display: \"block\",\n      fontSize: 16,\n      padding: 5,\n      paddingLeft: 20,\n    },\n    [\"@media (max-width:500px)\"]: { // eslint-disable-line no-useless-computed-key\n      width: \"88vw\",\n    },\n  }\n}));\n\nconst StyledTextFieldWhenFoldersHidden = withStyles(() => ({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      width: 698,\n\n      [\"@media (max-width:1040px)\"]: { // eslint-disable-line no-useless-computed-key\n       width: 497,\n      },\n\n      [\"@media (max-width:820px)\"]: { // eslint-disable-line no-useless-computed-key\n        width: 246,\n        height: 522,\n      },\n\n      [\"@media (max-width:600px)\"]: { // eslint-disable-line no-useless-computed-key\n        width: 261,\n      },\n    },\n\n    \"& .MuiInputBase-inputMultiline\": {\n      [\"@media (max-width:820px)\"]: { // eslint-disable-line no-useless-computed-key\n        height: 454,\n       },\n    }\n  }\n}))(TextField)\n\nconst Notes = ({\n  notes,\n  folders,\n  isUserPressAddNoteNameBtn,\n  pressAddNoteNameBtn,\n  addNoteFromProps,\n  isDialogOpened,\n  saveNoteId,\n  changeNoteBody,\n  selectedNoteIdForEditing,\n  isFoldersHidden,\n  changeNotesInThisFolder,\n  changeNoteBodyInNotesInThisFolder,\n  selectedFolderIdForEditing,\n  mobile,\n}) => {\n  const classes = useStyles()\n  const [currentNote, setCurrentNote] = useState({\n    noteId: null,\n    noteName: null,\n    noteBody: null,\n    type: ItemTypesForReactDND.BOX,\n  })\n\n  const handleInputChange = (value) => {\n    setCurrentNote((prevState) => {\n      return {\n        ...prevState,\n        noteId: `noteId-${+new Date()}`,\n        noteName: value,\n      }\n    })\n  }\n\n  const handleTextFieldChange = (value) => {\n    changeNoteBody(value, selectedNoteIdForEditing)\n    changeNoteBodyInNotesInThisFolder(value, selectedNoteIdForEditing)\n  }\n\n  const isItAllNotesFolder = () => {\n    const folderAllNotes = folders.filter(\n      (folder) =>\n        folder.folderId === selectedFolderIdForEditing &&\n        folder.folderId === \"folderAllNotes\"\n    );\n    const [folder] = folderAllNotes\n    if (!folder) return false\n\n    return true\n  }\n\n  const notesInThisFolder = () => {\n    const folderAll = folders[0]\n    const notesInThisFolderInFolderAll = folderAll.notesInThisFolder\n    const needFolder = folders.filter(\n      folder => folder.folderId === selectedFolderIdForEditing\n    )\n    const [folder] = needFolder\n    if (!folder) return notesInThisFolderInFolderAll\n    const { notesInThisFolder } = folder\n    if (notesInThisFolder) return notesInThisFolder\n\n    return []\n  }\n\n  return (\n    <>\n      {isUserPressAddNoteNameBtn && notesInThisFolder().length < 1 && (\n        <input\n          autoFocus\n          type=\"text\"\n          maxLength=\"30\"\n          placeholder=\"New Note\"\n          className={classes.firstNoteinput}\n          onChange={(e) => handleInputChange(e.target.value)}\n          onBlur={() => {\n            pressAddNoteNameBtn(false)\n            if(currentNote.noteName === null) return\n            addNoteFromProps(currentNote)\n            setCurrentNote({\n              noteId: null,\n              noteName: null,\n              noteBody: null,\n              type: ItemTypesForReactDND.BOX\n            })\n            saveNoteId(currentNote.noteId)\n\n            if (isItAllNotesFolder()) {\n              changeNotesInThisFolder(\"folderAllNotes\", currentNote)\n            } else {\n              changeNotesInThisFolder(\"folderAllNotes\", currentNote)\n              changeNotesInThisFolder(selectedFolderIdForEditing, currentNote)\n            }\n          }}\n        />\n      )}\n      {notesInThisFolder().length > 0 && (\n        <>\n          <div className={classes.root}>\n            <ul>\n              {notesInThisFolder().map((note) => (\n                <Note note={note} key={note.noteId} mobile={mobile} />\n              ))}\n              {isUserPressAddNoteNameBtn && (\n                <div>\n                  <input\n                    autoFocus\n                    type=\"text\"\n                    maxLength=\"30\"\n                    placeholder=\"New Note\"\n                    className={classes.input}\n                    onChange={e => handleInputChange(e.target.value)}\n                    onBlur={() => {\n                      pressAddNoteNameBtn(false)\n                      if(currentNote.noteName === null) return\n                      addNoteFromProps(currentNote)\n                      saveNoteId(currentNote.noteId)\n\n                      if (isItAllNotesFolder()) {\n                        changeNotesInThisFolder(\"folderAllNotes\", currentNote)\n                      } else {\n                        changeNotesInThisFolder(\"folderAllNotes\", currentNote)\n                        changeNotesInThisFolder(\n                          selectedFolderIdForEditing,\n                          currentNote\n                        )\n                      }\n                    }}\n                  />\n                </div>\n              )}\n            </ul>\n            {isDialogOpened && <Dialog />}\n          </div>\n          {notes.find((note) => note.noteId === selectedNoteIdForEditing) && (\n            <NoteBodyWrapper>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                {!isFoldersHidden && (\n                  <TextField\n                    rows=\"22\"\n                    multiline\n                    label=\"Note\"\n                    variant=\"outlined\"\n                    id=\"outlined-multiline-static\"\n                    value={findNoteBody(notes, selectedNoteIdForEditing)}\n                    onChange={(e) => handleTextFieldChange(e.target.value)}\n                  />\n                )}\n\n                {isFoldersHidden && (\n                  <StyledTextFieldWhenFoldersHidden\n                    rows=\"22\"\n                    multiline\n                    label=\"Note\"\n                    variant=\"outlined\"\n                    id=\"outlined-multiline-static\"\n                    value={findNoteBody(notes, selectedNoteIdForEditing)}\n                    onChange={(e) => handleTextFieldChange(e.target.value)}\n                  />\n                )}\n              </form>\n            </NoteBodyWrapper>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  notes: getNotes(state),\n  folders: getFolders(state),\n  isUserPressAddNoteNameBtn: getIsUserPressAddNoteNameBtn(state),\n  isDialogOpened: getIsDialogOpened(state),\n  selectedNoteIdForEditing: getSelectedNoteIdForEditing(state),\n  isFoldersHidden: getIsFoldersHidden(state),\n  selectedFolderIdForEditing: getSelectedFolderIdForEditing(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addNoteFromProps: (note) => dispatch(addNote(note)),\n  pressAddNoteNameBtn: (value) => dispatch(pressAddNoteNameBtn(value)),\n  saveNoteId: (noteId) => dispatch(saveNoteId(noteId)),\n  changeNoteBody: (noteBody, noteId) =>\n    dispatch(changeNoteBody(noteBody, noteId)),\n  changeNotesInThisFolder: (folderId, note) =>\n    dispatch(changeNotesInThisFolder(folderId, note)),\n  changeNoteBodyInNotesInThisFolder: (noteBody, noteId) =>\n    dispatch(changeNoteBodyInNotesInThisFolder(noteBody, noteId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Box from \"@material-ui/core/Box\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport { styled, makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport AppHeader from \"./components/AppHeader\"\nimport Folders from \"./components/Folders\"\nimport AddFolderBtn from \"./components/buttons/AddFolderBtn\"\nimport Notes from \"./components/Notes\"\n\nimport { getIsFoldersHidden } from \"./redux/store\"\n\nconst Panels = styled(Box)({\n  display: \"flex\",\n})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"100px auto\",\n    width: 1000,\n    height: 560,\n    border: \"1px solid #dfdfdf\",\n    borderRadius: 10,\n    boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n\n    [\"@media (max-width:1040px)\"]: {// eslint-disable-line no-useless-computed-key\n      width: 800,\n    },\n    [\"@media (max-width:820px)\"]: {// eslint-disable-line no-useless-computed-key\n      width: 550,\n    },\n    [\"@media (max-width:599px)\"]: {// eslint-disable-line no-useless-computed-key\n      margin: 0,\n      height: 870,\n      width: \"100%\",\n      backgroundColor: \"rgb(228, 226, 229)\"\n    },\n  },\n  notesPanel: {\n    display: \"flex\",\n    width: \"100%\",\n    [\"@media (max-width:820px)\"]: {// eslint-disable-line no-useless-computed-key\n      flexDirection: \"column\",\n      width: 406,\n    },\n  },\n  notesWhenFoldersHidden: {\n    display: \"flex\",\n    width: \"100%\",\n\n    [theme.breakpoints.between(\"sm\", \"820\")]: {\n      flexDirection: \"row\",\n    },\n  },\n\n  folders: {\n    width: 310,\n    height: 482,\n    position: \"relative\",\n    padding: 20,\n    borderRight: \"1px solid rgb(153, 152, 152)\",\n    backgroundColor: \"rgb(228, 226, 229)\",\n    borderBottomLeftRadius: 10,\n  },\n  hidden: {\n    display: \"none\",\n  },\n}))\n\nconst App = ({ isFoldersHidden }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"))\n\n  if (!matches) {\n    return (\n      <div className={classes.root}>\n        <AppHeader mobile={true} />\n        <Folders mobile={true} />\n        <hr />\n        <Notes mobile={true} />\n      </div>\n    )\n  } else {\n    return (\n      <>\n        <div className={classes.root}>\n          <AppHeader />\n          <Panels>\n            <div className={isFoldersHidden ? classes.hidden : classes.folders}>\n              <Folders />\n              <AddFolderBtn />\n            </div>\n            <div\n              className={\n                isFoldersHidden\n                  ? classes.notesWhenFoldersHidden\n                  : classes.notesPanel\n              }\n            >\n              <Notes />\n            </div>\n          </Panels>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isFoldersHidden: getIsFoldersHidden(state),\n})\n\nexport default connect(mapStateToProps, null)(App)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { DndProvider } from \"react-dnd\"\nimport Backend from \"react-dnd-html5-backend\"\nimport App from \"./App\"\nimport \"./styles.scss\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <DndProvider backend={Backend}>\n        <App />\n      </DndProvider>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}